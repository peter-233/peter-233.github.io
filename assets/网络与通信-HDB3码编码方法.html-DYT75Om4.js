import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,o as e,b as p}from"./app-Cu46omyD.js";const h={},r=p('<h1 id="网络与通信-hdb3码编码方法" tabindex="-1"><a class="header-anchor" href="#网络与通信-hdb3码编码方法"><span>网络与通信-HDB3码编码方法</span></a></h1><p>之前一直没搞明白HDB3的编码方法，在网上找了许多关于HDB3码的编码方法，但是经过验证都不正确。在此记录一下正确的编码方法。</p><p>HDB3编码方法：</p><p>step1：在所有出现4个0的位置的最后一个0的位置标记上‘V’</p><p>step2：默认第一个V为正（事实上为负也可以，这里为了方便说明默认为正），然后接下来让所有的V交替正负号</p><p>step3：对于每两个V之间的1来说，让第一个1的正负与起始的V正负号相反，之后的1和这个1正负号交替</p><p>step4：对于前面没有V的1来说，令它与后面的V正负号相同。对于所有V，检查其前面是否存在与其符号相同的1，如果没有则需要修改该V所对应的4个0的第一个0为B，正负号与该V相同</p><p>说了步骤估计还是云里雾里，直接来个例子：</p><p>example：</p><p>将100001101000000001100001转换为HDB3码</p><table><thead><tr><th>位置</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th><th>23</th><th>24</th></tr></thead><tbody><tr><td>源码</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>step1</td><td></td><td></td><td></td><td></td><td>V</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>V</td><td></td><td></td><td></td><td>V</td><td></td><td></td><td></td><td></td><td></td><td>V</td><td></td></tr><tr><td>step2</td><td></td><td></td><td></td><td></td><td>V+</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>V-</td><td></td><td></td><td></td><td>V+</td><td></td><td></td><td></td><td></td><td></td><td>V-</td><td></td></tr><tr><td>step3</td><td></td><td></td><td></td><td></td><td>V+</td><td>1-</td><td>1+</td><td></td><td>1-</td><td></td><td></td><td></td><td>V-</td><td></td><td></td><td></td><td>V+</td><td>1-</td><td>1+</td><td></td><td></td><td></td><td>V-</td><td>1+</td></tr><tr><td>step4</td><td>1+</td><td></td><td></td><td></td><td>V+</td><td>1-</td><td>1+</td><td></td><td>1-</td><td></td><td></td><td></td><td>V-</td><td>B+</td><td></td><td></td><td>V+</td><td>1-</td><td>1+</td><td>B-</td><td></td><td></td><td>V-</td><td>1+</td></tr><tr><td>最终输出</td><td>1+</td><td>0</td><td>0</td><td>0</td><td>1+</td><td>1-</td><td>1+</td><td>0</td><td>1-</td><td>0</td><td>0</td><td>0</td><td>1-</td><td>1+</td><td>0</td><td>0</td><td>1+</td><td>1-</td><td>1+</td><td>1-</td><td>0</td><td>0</td><td>1-</td><td>1+</td></tr></tbody></table><p>下面结合这个例子解释一下上面的步骤：</p><p>第一步，标出来V，没什么好说的</p><p>第二步，给标出来的V赋一个正负号，要交替的，比如+-+-...或是-+-+...，这里是+-+-+-...这样的</p><p>第三步，比方说第6位的1，想要判断他的正负号，只需要看他前面的V的正负号并与之相反就行了，后面的1正负号就和他来回相反就行，直到遇见下一个V。因此6-12位的1判断流程就是首先判断出第6位的1是负号，然后第7位与之相反是正号，第9位与第7位相反是负号。第18位的1就要看它前面的第17位的V的正负，判断流程同上</p><p>第四步，HDB3需要满足V前面的1符号需要与自身相同。因此对于开始的1（例子中就是第一位的1）需要与它后面的V符号相同，也就是正号。然后对于每个V逐个排查前面的1符号与自己是否相同。在本例中，发现第17位的V在它前面的不是与它符号相同的1，所以就在这个V对应的4个0的第一个0的位置（也就是第14位）标上B，并且让这个B的符号与V相同。对于第23位的V也是一样的道理。</p><p>确定了所有的正负号，只需要按照正负号输出0， 1， -1就行了。</p>',17),o=[r];function a(s,n){return e(),d("div",null,o)}const i=t(h,[["render",a],["__file","网络与通信-HDB3码编码方法.html.vue"]]),B=JSON.parse('{"path":"/posts/%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%80%9A%E4%BF%A1-HDB3%E7%A0%81%E7%BC%96%E7%A0%81%E6%96%B9%E6%B3%95.html","title":"网络与通信-HDB3码编码方法","lang":"zh-CN","frontmatter":{"date":"2022-06-07T23:51:00.000Z","category":["杂谈"],"description":"网络与通信-HDB3码编码方法 之前一直没搞明白HDB3的编码方法，在网上找了许多关于HDB3码的编码方法，但是经过验证都不正确。在此记录一下正确的编码方法。 HDB3编码方法： step1：在所有出现4个0的位置的最后一个0的位置标记上‘V’ step2：默认第一个V为正（事实上为负也可以，这里为了方便说明默认为正），然后接下来让所有的V交替正负号 ...","head":[["meta",{"property":"og:url","content":"https://peter-233.github.io/posts/%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%80%9A%E4%BF%A1-HDB3%E7%A0%81%E7%BC%96%E7%A0%81%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"peter-233的博客"}],["meta",{"property":"og:title","content":"网络与通信-HDB3码编码方法"}],["meta",{"property":"og:description","content":"网络与通信-HDB3码编码方法 之前一直没搞明白HDB3的编码方法，在网上找了许多关于HDB3码的编码方法，但是经过验证都不正确。在此记录一下正确的编码方法。 HDB3编码方法： step1：在所有出现4个0的位置的最后一个0的位置标记上‘V’ step2：默认第一个V为正（事实上为负也可以，这里为了方便说明默认为正），然后接下来让所有的V交替正负号 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-31T12:17:54.000Z"}],["meta",{"property":"article:author","content":"peter-233"}],["meta",{"property":"article:published_time","content":"2022-06-07T23:51:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-31T12:17:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络与通信-HDB3码编码方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-07T23:51:00.000Z\\",\\"dateModified\\":\\"2024-08-31T12:17:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"peter-233\\",\\"url\\":\\"https://github.com/peter-233\\"}]}"]]},"headers":[],"git":{"createdTime":1725106674000,"updatedTime":1725106674000,"contributors":[{"name":"peter-233","email":"1378540588@qq.com","commits":1}]},"readingTime":{"minutes":2.68,"words":804},"filePathRelative":"posts/网络与通信-HDB3码编码方法.md","localizedDate":"2022年6月8日","excerpt":"\\n<p>之前一直没搞明白HDB3的编码方法，在网上找了许多关于HDB3码的编码方法，但是经过验证都不正确。在此记录一下正确的编码方法。</p>\\n<p>HDB3编码方法：</p>\\n<p>step1：在所有出现4个0的位置的最后一个0的位置标记上‘V’</p>\\n<p>step2：默认第一个V为正（事实上为负也可以，这里为了方便说明默认为正），然后接下来让所有的V交替正负号</p>\\n<p>step3：对于每两个V之间的1来说，让第一个1的正负与起始的V正负号相反，之后的1和这个1正负号交替</p>\\n<p>step4：对于前面没有V的1来说，令它与后面的V正负号相同。对于所有V，检查其前面是否存在与其符号相同的1，如果没有则需要修改该V所对应的4个0的第一个0为B，正负号与该V相同</p>","autoDesc":true}');export{i as comp,B as data};
